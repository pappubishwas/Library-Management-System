"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.indexHtml = indexHtml;
const fs_1 = require("fs");
const glob = require("glob");
const variables_reducer_1 = require("./variables-reducer");
function indexHtml(browserOutputDir, serverOutputDir, locales = [], raw, runtime = false) {
    try {
        glob.sync(`${browserOutputDir}/**/index{.html,.csr.html}`).forEach((filePath) => {
            const html = (0, fs_1.readFileSync)(filePath, "utf-8");
            const content = (0, variables_reducer_1.variablesReducer)(html, raw); // Replace %VARIABLE% with the actual value
            try {
                (0, fs_1.writeFileSync)(filePath, runtime
                    ? content.replace(/<head>/, `<head><script src="/ngx-env.js"></script>`)
                    : content);
            }
            catch (e) {
                console.log(`❌ Failed to replace variables in ${filePath} ❌`);
                throw e;
            }
        });
        if (serverOutputDir) {
            glob
                .sync(`${serverOutputDir}/**/index.server.html`)
                .forEach((filePath) => {
                const html = (0, fs_1.readFileSync)(filePath, "utf-8");
                const content = (0, variables_reducer_1.variablesReducer)(html, raw); // Replace %VARIABLE% with the actual value
                try {
                    (0, fs_1.writeFileSync)(filePath, content);
                }
                catch (e) {
                    console.log(`❌ Failed to replace variables in ${filePath} ❌`);
                    throw e;
                }
            });
        }
        if (runtime) {
            const runtimeStmt = `globalThis._NGX_ENV_ = ${JSON.stringify(raw, null, 2)};`;
            if (locales.length > 0) {
                locales.forEach((locale) => {
                    console.log(`📦 Writing ngx-env.js to ${browserOutputDir}/${locale}/ngx-env.js`);
                    (0, fs_1.writeFileSync)(`${browserOutputDir}/${locale}/ngx-env.js`, runtimeStmt);
                });
            }
            else {
                console.log(`📦 Writing ngx-env.js to ${browserOutputDir}/ngx-env.js`);
                (0, fs_1.writeFileSync)(`${browserOutputDir}/ngx-env.js`, runtimeStmt);
            }
        }
    }
    catch (e) {
        console.error(e);
    }
}
