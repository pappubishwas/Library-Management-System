"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.buildWithPlugin = void 0;
const architect_1 = require("@angular-devkit/architect");
// import { plugin } from "../utils/webpack-plugin";
const rxjs_1 = require("rxjs");
const project_1 = require("../utils/project");
// import { getEnvironment } from "../utils/get-environment";
// import { env } from "@dotenv-run/core";
const buildWithPlugin = (options, context) => {
    return (0, rxjs_1.from)((0, project_1.getProjectCwd)(context)).pipe((0, rxjs_1.switchMap)((cwd) => {
        console.warn("@ngx-env/builder: Karma builder is not supported yet due to a limitation in the Angular CLI, use jest instead");
        return (0, rxjs_1.of)({ success: false });
        // switch (options.builderMode) {
        //   case "application":
        //   case "detect":
        //     const { full } = env({
        //       ...options.ngxEnv,
        //       cwd,
        //       environment: getEnvironment(context.target.configuration),
        //     });
        //     (options as any).define = full;
        //     return executeKarmaBuilder(options, context);
        //   case "browser":
        //     return executeKarmaBuilder(
        //       options,
        //       context,
        //       plugin({
        //         ...options.ngxEnv,
        //         cwd,
        //         environment: getEnvironment(context.target.configuration),
        //       })
        //     );
        //   default:
        //     return throwError(() => "@ngx-env/builder: Invalid builder mode");
        // }
    }));
};
exports.buildWithPlugin = buildWithPlugin;
exports.default = (0, architect_1.createBuilder)(exports.buildWithPlugin);
