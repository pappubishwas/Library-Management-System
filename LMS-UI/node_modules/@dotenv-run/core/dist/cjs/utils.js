"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPathsDownTo = exports.getAbsoluteEnvPath = exports.isSubfolder = void 0;
const fs = __importStar(require("fs"));
const path = __importStar(require("path"));
function isSubfolder(parent, child) {
    return path.relative(parent, child).startsWith("..");
}
exports.isSubfolder = isSubfolder;
function getAbsoluteEnvPath(envPath, cwd) {
    const _envPath = path.isAbsolute(envPath)
        ? envPath
        : path.resolve(cwd, envPath);
    return fs.existsSync(_envPath)
        ? fs.lstatSync(_envPath).isDirectory()
            ? _envPath
            : path.dirname(_envPath)
        : cwd;
}
exports.getAbsoluteEnvPath = getAbsoluteEnvPath;
function getPathsDownTo(envPath, destination) {
    let currentPath = destination;
    const paths = [currentPath];
    while (currentPath !== envPath && currentPath !== "/") {
        currentPath = path.dirname(currentPath);
        paths.push(currentPath);
    }
    return paths;
}
exports.getPathsDownTo = getPathsDownTo;
//# sourceMappingURL=utils.js.map