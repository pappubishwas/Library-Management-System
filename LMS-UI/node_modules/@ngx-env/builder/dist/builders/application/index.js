"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.buildWithPlugin = void 0;
const architect_1 = require("@angular-devkit/architect");
const build_angular_1 = require("@angular-devkit/build-angular");
const core_1 = require("@dotenv-run/core");
const path_1 = require("path");
const rxjs_1 = require("rxjs");
const index_html_build_1 = require("../utils/index-html-build");
const get_environment_1 = require("../utils/get-environment");
const project_1 = require("../utils/project");
const buildWithPlugin = (options, context) => {
    const dotEnvOptions = options.ngxEnv;
    return (0, rxjs_1.from)((0, project_1.getProjectCwd)(context)).pipe((0, rxjs_1.switchMap)((cwd) => {
        const { full, raw } = (0, core_1.env)(Object.assign(Object.assign({}, dotEnvOptions), { cwd, global: "_NGX_ENV_", environment: (0, get_environment_1.getEnvironment)(context.target.configuration) }));
        options.define = full;
        return (0, architect_1.fromAsyncIterable)((0, build_angular_1.buildApplication)(options, context)).pipe((0, rxjs_1.tap)(() => {
            const outputDir = (0, path_1.join)(context.workspaceRoot, options.outputPath.toString());
            (0, index_html_build_1.indexHtml)((0, path_1.join)(outputDir, "browser"), options.ssr ? (0, path_1.join)(outputDir, "server") : null, Array.isArray(options.localize) ? options.localize : [], raw, dotEnvOptions.runtime);
        }));
    }));
};
exports.buildWithPlugin = buildWithPlugin;
exports.default = (0, architect_1.createBuilder)(exports.buildWithPlugin);
